file_list = {'plik1.mat', 'plik2.mat', 'plik3.mat'}; 

% Inicjalizacja zmiennej do przechowywania wszystkich okresów
all_periods = [];

% Pętla przez każdy plik
for i = 1:length(file_list)
    % Załaduj dane z pliku
    data = load(file_list{i});
    
    % Znajdź lokalne maksima sygnału (zakładamy, że dane to x = czas i y = sygnał)
    [peaks, locs] = findpeaks(data.y, data.x);
    
    % Oblicz różnice między kolejnymi maksimami (okresy)
    periods = diff(locs);
    
    % Dodaj obliczone okresy do zbiorczej listy
    all_periods = [all_periods; periods];
end

% Oblicz średni okres na podstawie wszystkich okresów
total_average_period = mean(all_periods);

% Wyznacz średni okres dla sygnału z pierwszego pliku
[peaks1, locs1] = findpeaks(data1.y, data1.x); % 'x' to wektor czasu, 'y' to sygnał
periods1 = diff(locs1); % różnice pomiędzy maksymami
average_period1 = mean(periods1); % średni okres dla sygnału z pliku 1
log_peaks1 = log(peaks1);
coeffs1 = polyfit(locs1, log_peaks1, 1); % Dopasowanie 1-wymiarowego wielomianu (liniowego)
alpha1 = -coeffs1(1);

% Wyznacz średni okres dla sygnału z drugiego pliku
[peaks2, locs2] = findpeaks(data2.y, data2.x);
periods2 = diff(locs2);
average_period2 = mean(periods2);
log_peaks2 = log(peaks2);
coeffs2 = polyfit(locs2, log_peaks2, 1); % Dopasowanie 1-wymiarowego wielomianu (liniowego)
alpha2 = -coeffs2(1);

% Wyznacz średni okres dla sygnału z trzeciego pliku
[peaks3, locs3] = findpeaks(data3.y, data3.x);
periods3 = diff(locs3);
average_period3 = mean(periods3);
log_peaks3 = log(peaks1);
coeffs3 = polyfit(locs3, log_peaks3, 1); % Dopasowanie 1-wymiarowego wielomianu (liniowego)
alpha3 = -coeffs3(1);

% Oblicz średni okres na podstawie wszystkich 3 sygnałów
total_average_period = mean([average_period1, average_period2, average_period3]);

% Wyświetl wynik
fprintf('Średni okres dla 1 sygnału: %f\n', average_period1);
fprintf('Średni okres dla 2 sygnału: %f\n', average_period2);
fprintf('Średni okres dla 3 sygnału: %f\n', average_period3);
fprintf('Średni okres na podstawie wszystkich 3 sygnałów: %f\n', total_average_period);
T = total_average_period;
g = 9.8105; 
U = (0.151 * 0.178)/sin(pi/2);
I = (T/(2*pi))*(T/(2*pi))*U*g;